name: deploy_dev

on:
  workflow_dispatch:
    inputs:
      prometheus:
        description: 'Deploy Prometheus?'
        required: true
        default: false
        type: boolean

  push:
    branches:
      - main
env:
  KUBE_CONFIG: ${{secrets.KUBE_CONFIG}}

jobs:
  kube-skaffold-cicd:
    runs-on: ubuntu-22.04
    steps:
    - uses: actions/checkout@v3

    - name: Setting Kubernetes Config           
      run: |
        echo "show me the config"
        kubectl config view
        kubectl version --client
        echo "KUBE_CONFIG path"
        mkdir ~/.kube/
        ls ~/.kube/
        echo "trying to set KUBE_CONFIG.."
        echo "$KUBE_CONFIG" > ~/.kube/config
        echo "trying to Get Nodes"
        echo "show me the config"
        kubectl config view        
        #kubectl get nodes
    - name: Setting Skaffold
      run: |        
        # SKAFFOLD TIME
        echo "Installing SKaffold..."
        curl -Lo skaffold https://storage.googleapis.com/skaffold/releases/latest/skaffold-linux-amd64
        sudo install skaffold /usr/local/bin/
        echo "Verifying SKaffold installation..."
        skaffold version
    
    - name: Deploying Develop
      run: | 
        kubectl create namespace develop || echo "Ya existe el namespace develop"
        echo "Deploying develop...."
        skaffold init --kubernetes-manifest deploy.yaml --skip-build --force
        skaffold run --namespace=develop       
      shell: bash

    - name: Testing installations
      run: | 
        kubectl get pods
        kubectl get pods -n develop
        kubectl get svc -n develop
    
    
    - name: Deploying prometheus 
      if: ${{ inputs.prometheus == true }}
      run: |
        kubectl create namespace monitoring || echo "Ya existe el namespace monitoring"
        helm repo add prometheus-community https://prometheus-community.github.io/helm-charts
        helm repo update
        helm install prometheus prometheus-community/prometheus
        kubectl get svc -n monitoring
        echo "Editar el servicio prometheus-server y convertirlo en LoadBalancer"
    - name: Testing installations with Prometheus
      if: ${{ inputs.prometheus == true }}
      run: | 
        kubectl get pods -n monitoring
        kubectl get svc -n monitoring
      shell: bash